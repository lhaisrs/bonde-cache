pipeline:
  build:
    image: golang
    commands:
      - go get 
      - go test
  publish:
    image: plugins/docker
    repo: nossas/bonde-cache
    username: lpirola
    password: ${DOCKER_PASSWORD}
    tags:
      - ${DRONE_TAG}
    when:
      event: tag
  deployment:
    image: appleboy/drone-ssh
    host: cache.bonde.org
    username: ubuntu
    port: 22
    script:
      - cd ~/bonde-cache
      - sudo docker pull nossas/bonde-cache:${DRONE_TAG}
      - sudo docker stop bonde-cache-app
      - sudo docker run -it --rm -p 443:443 -p 80:80 -v "$PWD":/go/src/app -w /go/src/app -e PORT=80 -e CACHE_PORT=80 -e CACHE_PORTSSL=443 -e CACHE_DEV=false -e CACHE_INTERVAL=60 -e CACHE_RESET=false --name bonde-cache-app -d nossas/bonde-cache:${DRONE_TAG}
      - sudo docker start bonde-cache-app
      - sudo docker logs bonde-cache-app
    when:
      status: success
      event: tag
  staging-publish:
    image: plugins/docker
    repo: nossas/bonde-cache
    username: lpirola
    password: ${DOCKER_PASSWORD}
    tags:
      - ${DRONE_BRANCH}
    when:
      status: success
      branch: [hotfix-*, release-*, feature-*, develop]
  staging-deployment:
    image: appleboy/drone-ssh
    host: cache.bonde.org
    username: ubuntu
    port: 22
    script:
      - sudo docker pull nossas/bonde-cache:${DRONE_BRANCH}
      - sudo docker tag nossas/bonde-cache:${DRONE_BRANCH} dokku/00-cache:latest
      - dokku tags:deploy 00-cache latest
    when:
      status: success
      branch: [hotfix-*, release-*, feature-*, develop]
  notify:
    image: plugins/slack
    webhook: https://hooks.slack.com/services/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
    channel: n_tech
    username: CI - ${DRONE_REPO_NAME}
    when:
      event: [ push, tag, build, publish, deployment, pull_request ]
      status: [ success, failure ]
